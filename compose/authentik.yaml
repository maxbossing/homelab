networks:
  proxiable:
    external: true
  authentik-db:
    external: true

volumes:
  authentik_postgres: {}
  authentik_redis: {}
  authentik_media: {}
  authentik_templates: {}
  authentik_certs: {}

services:
  authentik-postgres:
    container_name: 'authentik-postgres'
    image: 'postgres:16-alpine'
    restart: unless-stopped
    volumes:
      - authentik_postgres:/var/lib/postgresql/data
    environment:
      POSTGRESS_PASSWORD: postgres
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    env_file:
      - authentik.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d authentik -U authentik"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    networks:
      - authentik-db

  authentik-redis:
    container_name: 'authentik-redis'
    image: 'redis:alpine'
    restart: unless-stopped
    volumes:
      - authentik_redis:/data
    env_file:
      - autnentik.env
    networks:
    - authentik-db
    healthcheck:     
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s 
      retries: 5
  
  authentik-server:
    container_name: 'authentik-server'
    image: 'ghcr.io/goauthentik/server:2024.6.2'
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: postgres 
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    networks:
      authentik-db:
      proxiable:
    depends_on:
     - authentik-postgres
     - authentik-redis
    env_file:
      - authentik.env
  
  authentik-worker:
    container_name: 'authentik-worker'
    image: 'ghcr.io/goauthentik/server:2024.6.2'
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: postgres
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - authentik-db
    env_file:
      - authentik.env
